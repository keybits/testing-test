machine:
#  pre:
#    - cat ~/.ssh/authorized_keys
  timezone: Europe/Dublin
  python:
    version: 3.5.2
#  ruby:
#    version: 2.1.6
#  php:
#    version: 7.0.4
#  node:
#    version: 6.1.0
#  ruby:
#    version: 2.3.1
#  services:
#    - redis
#    - docker
#  environment:
#    SHORT_GIT_HASH: $(echo $CIRCLE_SHA1 | cut -c -7)

#dependencies:
#  pre:
  #  - sudo service redis-server stop
  #  - >
  #    cd ~ && if [ ! -d "redis-3.2.5" ]; then
  #      wget http://download.redis.io/releases/redis-3.2.5.tar.gz
  #      tar xzf redis-3.2.5.tar.gz
  #      cd redis-3.2.5 && make;
  #    fi
  #  - cd ~/redis-3.2.5 && sudo make install
  #  - sudo sed -i 's/bin/local\/bin/g' /etc/init/redis-server.conf
  #  - sudo service redis-server start
  #cache_directories:
  #  - ~/redis-3.2.5

#   dependencies:
#     override:
#       - sudo add-apt-repository ppa:ondrej/php -y
#       - sudo apt-get update
#       - sudo apt-get install php7.1 php7.1-mysql
#       - sudo a2dismod php5
#       - sudo a2enmod php7.1
  #  - docker info
  #  - docker run -d -p 9200:9200 elasticsearch:2.3; sleep 10


dependencies:
  pre:
    - sudo apt-get update
    - bash test.sh
    #new chromedriver
    - wget https://chromedriver.storage.googleapis.com/2.29/chromedriver_linux64.zip
    - unzip chromedriver_linux64.zip
    - sudo cp chromedriver /usr/local/bin/chromedriver
    - which chromedriver
    - chromedriver --version
#    - cd /home/ubuntu && wget http://www.memcached.org/files/memcached-1.4.31.tar.gz && tar -zxvf memcached-1.4.31.tar.gz
#    - sudo apt-get install libevent-dev
#    - cd /home/ubuntu/memcached-1.4.31 && ./configure && make && sudo make install
#    - sudo rm /usr/bin/memcached && sudo  ln -s /usr/local/memcached/bin/memcached /usr/bin/memcached
#    - sudo memcached -u root -d -m 1024 -p 11211 -l localhost
#    - echo "stats" | nc localhost 11211

test:
  override:
    - echo "php --version"
    # - bundle exec kitchen help
    # - curl --retry 10 --retry-delay 5 -v http://localhost:9200
    # - case $CIRCLE_NODE_INDEX in 0) nosetests tests/test1.py ;; 1) nosetests tests/test2.py ;; esac:
    #     parallel: true
    - ? |
        if [[ $CIRCLE_BRANCH != "production-v2" ]] ;
          then
            case $CIRCLE_NODE_INDEX in
            0) nosetests tests/test1.py ;;
            1) nosetests tests/test2.py ;;
          esac ;
        fi
      :
          parallel: true
  post:
#    - echo $CIRCLE_BUILD_IMAGE
    - echo $CIRCLE_NODE_INDEX:
        parallel: true
    - set |grep CIRCLE
    - touch $CIRCLE_ARTIFACTS/file.txt
#    - echo $SHORT_GIT_HASH

deployment:
  production:
    branch: master
    commands:
      - echo "export GIT_COMMIT_DESC=\"$(git log --format=oneline -n 1 $CIRCLE_SHA1)\"" >> ~/.bashrc
      - echo $GIT_COMMIT_DESC
      - "true"
